# Generated by Django 5.2.4 on 2025-07-27 16:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Номер накладной')),
                ('date', models.DateField(verbose_name='Дата накладной')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Код товара')),
                ('type', models.CharField(blank=True, max_length=100, verbose_name='Тип')),
                ('article', models.CharField(blank=True, max_length=100, null=True, verbose_name='Артикул')),
                ('name', models.TextField(verbose_name='Наименование')),
                ('price1', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена 1')),
                ('price2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена 2')),
                ('stock', models.TextField(verbose_name='Остаток')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('price_clear', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за ед товара.')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Прайс',
                'verbose_name_plural': 'Прайсы',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='TTN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Номер ТТН')),
                ('date', models.DateField(verbose_name='Дата ТТН')),
                ('status', models.CharField(choices=[('in_progress', 'В обработке'), ('completed', 'Завершена'), ('canceled', 'Отменена')], default='in_progress', max_length=20, verbose_name='Статус')),
                ('total_products', models.PositiveIntegerField(default=0, verbose_name='Всего товаров')),
                ('processed_files', models.PositiveIntegerField(default=0, verbose_name='Обработано файлов')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'ТТН',
                'verbose_name_plural': 'ТТН',
                'ordering': ['-date', 'number'],
            },
        ),
        migrations.CreateModel(
            name='FinalSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ttn_number', models.CharField(max_length=50, verbose_name='Номер ТТН')),
                ('price_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код из прайса')),
                ('price_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип из прайса')),
                ('price_article', models.CharField(blank=True, max_length=100, null=True, verbose_name='Артикул из прайса')),
                ('price_name', models.TextField(blank=True, null=True, verbose_name='Наименование из прайса')),
                ('price1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена 1 из прайса')),
                ('price2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена 2 из прайса')),
                ('price_clear', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена за ед. из прайса')),
                ('product_name', models.TextField(verbose_name='Наименование из накладной')),
                ('product_quantity', models.FloatField(verbose_name='Количество из накладной')),
                ('product_price', models.FloatField(verbose_name='Цена из накладной')),
                ('product_full_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='стоимость')),
                ('match_status', models.CharField(choices=[('full', 'Полное'), ('partial', 'Частичное'), ('none', 'Нет')], max_length=20, verbose_name='Статус соответствия')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
            options={
                'verbose_name': 'Финальная выборка',
                'verbose_name_plural': 'Финальные выборки',
                'indexes': [models.Index(fields=['ttn_number'], name='parser_fina_ttn_num_cb6455_idx'), models.Index(fields=['price_code'], name='parser_fina_price_c_cb3800_idx'), models.Index(fields=['price_article'], name='parser_fina_price_a_4b027d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExcelFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/', verbose_name='Файл Excel')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружен')),
                ('processed', models.BooleanField(default=False, verbose_name='Обработан')),
                ('page_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Номер страницы')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='parser.invoice', verbose_name='Накладная')),
                ('ttn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='excel_files', to='parser.ttn', verbose_name='ТТН')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Наименование товара')),
                ('quantity', models.FloatField(verbose_name='Количество')),
                ('price', models.FloatField(verbose_name='Цена, руб.коп.')),
                ('total', models.FloatField(blank=True, null=True, verbose_name='Сумма')),
                ('full_price', models.FloatField(blank=True, null=True, verbose_name='Стоимость (авто)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('excel_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='parser.excelfile', verbose_name='Исходный файл')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='parser.invoice', verbose_name='Накладная')),
                ('ttn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='parser.ttn', verbose_name='ТТН')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='ttn',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='parser.ttn', verbose_name='ТТН'),
        ),
    ]
